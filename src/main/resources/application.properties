server.port=8083
#######################################################
#ssl证书配置
#server.ssl.key-store=classpath:testcrt.p12
#server.ssl.key-alias=tomcathttps
#server.ssl.key-store-password=123456
#######################################################
#单数据源
spring.datasource.url=jdbc:mariadb://192.168.28.112:3307/i2dsp_authority?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=david
spring.datasource.password=123456
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#######################################################
##多数据源(因为有加one,two,springboot没法自动加载了,此时就需要自己配置一个DataSourceConfig,用来提供两个DataSource Bean)
#关联代码部分为TestUserJdbcTempMultiController和DataSourceConfig\JdbcTemplateConfig
#spring.datasource.one.url=jdbc:mariadb://192.168.28.112:3307/i2dsp_authority?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.one.username=david
#spring.datasource.one.password=123456
#spring.datasource.one.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.two.url=jdbc:mariadb://192.168.28.200:3308/burn_in_test?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.two.username=root
#spring.datasource.two.password=root
#spring.datasource.two.driver-class-name=org.mariadb.jdbc.Driver
#######################################################
#配置mybatis去哪里扫描mapper
mybatis.mapper-locations=classpath:mapper/*.xml
#######################################################
# 自动创建数据库table的配置(根据@Entity的类),当然配置的数据源也是必须的
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# By default the DDL execution (or validation) is deferred until the ApplicationContext has started.
# There is also a spring.jpa.generate-ddl flag, but it is not used if Hibernate autoconfig is active
# because the ddl-auto settings are more fine-grained.
spring.jpa.generate-ddl=true
# 实测,如果是create,每次启动Spring boot 都会drop table重建
#spring.jpa.hibernate.ddl-auto=create
# 实测,如果是 update,启动Spring boot时,如果数据库没有对应table,就会创建已经有了,就不管
spring.jpa.hibernate.ddl-auto=update
# 在控制台打印相关的sql
spring.jpa.show-sql=true
#######################################################
#redis数据库信息(引入了Spring Data Redis,并配置了redis基本信息,自动化配置就会生效)
spring.redis.database=1
spring.redis.password=123456
spring.redis.port=6379
spring.redis.host=192.168.28.55
# 【redis连接池信息】
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=1ms
spring.redis.lettuce.shutdown-timeout=100ms
#######################################################
# 【配置cache名称】
spring.cache.cache-names=c1
#######################################################
# 【配置shiro基本信息】
# 允许SessionId放到cookie
#shiro.sessionManager.sessionIdCookieEnabled=true
## 允许SessionId放到url地址栏
#shiro.sessionManager.sessionIdUrlRewritingEnabled=true
## 未授权访问默认跳转页面
#shiro.unauthorizedUrl=/unauthorizedUrl
## 开启shiro
#shiro.web.enabled=true
## 登录成功的跳转页面
#shiro.successUrl=/index
## 登录页面
#shiro.loginUrl=/login
## proxy-target-class属性值决定是基于JDK接口（false）还是基于类的代理（true）被创建。
#spring.aop.proxy-target-class=true
#######################################################
#spring security 默认登录账密配置
spring.security.user.name=david
spring.security.user.password=123